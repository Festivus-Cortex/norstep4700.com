name: Release Build

env:
  # The checkout action checks out to path /tmp/runner/work/norstep4700.com/norstep4700.com by default
  basepath: /tmp/runner/work/norstep4700.com/norstep4700.com

permissions:
  contents: write

on:
  # Only run when a pull request is merged into the main branch
  pull_request:
    types: [closed]
    branches: [main]

jobs:
  # Build the latest master, version it, and create a release
  build-and-release:
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main'
    runs-on: self-hosted

    steps:
      - name: Set up SSH for CI Bot
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.CI_SSH_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan github.com >> ~/.ssh/known_hosts
        shell: bash

      - name: Configure git to use SSH
        run: |
          git config --global user.name "Norstep-CI"
          git config --global user.email "admin@norstep4700.com"
          git remote set-url origin git@github.com:Festivus-Cortex/norstep4700.com.git
        shell: bash

      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: main
          lfs: "true"

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Build Project
        run: yarn build

      - name: Increment Package Version
        run: |
          cd ${{env.basepath}}
          yarn version --patch --no-git-tag-version
          git add package.json
          git commit -m "chore: bump version [skip ci]"
          git push origin main

      - name: Prepare and Compress Release
        run: |
          mkdir -p /release/.next/static
          mkdir -p /release/public
          cp -r ${{env.basepath}}/.next/standalone/* /release/
          cp -r ${{env.basepath}}/public/* /release/public/
          cp -r ${{env.basepath}}/.next/static/* /release/.next/static/
          cd /release
          zip -r ../norstep4700-portfolio.zip ./*
        shell: bash

      - name: Get Package Version
        id: get_version
        run: echo "version=$(node -p \"require('${{env.basepath}}/package.json').version\")" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          release_name: Release v${{ steps.get_version.outputs.version }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /norstep4700-portfolio.zip
          asset_name: norstep4700-portfolio.zip
          asset_content_type: application/zip
